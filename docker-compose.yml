version: '3'
services:
  wpt_server:
    container_name: wpt_server
    image: webpagetest/server:latest
    volumes:
      - ./wpt_data/dat:/var/www/html/dat
      - ./wpt_data/results:/var/www/html/results
      - ./wpt_data/logs:/var/www/html/logs
      - ./wpt-server/settings/keys.ini:/var/www/html/settings/keys.ini
      - ./wpt-server/settings/locations.ini:/var/www/html/settings/locations.ini
      - ./wpt-server/settings/settings.ini:/var/www/html/settings/settings.ini
    ports:
      - 4000:80
    restart: unless-stopped
  wpt_agent:
    container_name: wpt_agent
    image: webpagetest/agent:latest
    shm_size: '2gb'
    environment:
      # TODO: Explore why I can't use http://wpt_server:4000/work/
      SERVER_URL: http://localhost:4000/work/
      LOCATION: Local_Docker
      KEY: location_key_1
      NAME: default-wpt-agent
      EXTRA_ARGS: "--log /debug.log -vvvv"
    depends_on:
      - wpt_server
    ports:
      - "4001:80"
    privileged: true
    cap_add:
      - NET_ADMIN
    network_mode: "host"
    extra_hosts:
      - "local-app.dev:192.168.0.150"
    env_file:
      - wpt.env
    restart: unless-stopped
  sitespeed.io:
    container_name: sitespeed.io
    image: sitespeedio/sitespeed.io:19.6.0-plus1
    command: -V
    shm_size: 2g
    volumes:
      - ./reports/sitespeed-result/:/sitespeed.io/sitespeed-result
  buildtracker:
    container_name: buildtracker
    build: ./buildtracker
    depends_on:
      - postgres
    ports:
      - "9002:3000"
    restart: unless-stopped
  lhci-server:
    container_name: lhci-server
    build: ./lhci-server
    ports:
      - "9001:9001"
    volumes:
      - ./reports/lhci-server/:/data
    restart: unless-stopped
  lhci-client:
    container_name: lhci-client
    build: ./lhci-client
    command: -V
    shm_size: 1g
    volumes:
      - ./reports/lhci-client/:/home/lhci/reports/.lighthouseci
  k6:
    container_name: k6
    image: loadimpact/k6:latest
    ports:
      - "6565:6565"
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./k6/scripts:/scripts
  grafana:
    container_name: grafana
    image: grafana/grafana:8.1.5
    hostname: grafana
    # build: ./grafana
    depends_on:
      - graphite
    links:
      - graphite
      - influxdb:influxdb
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=hdeAga76VG6ga7plZ1
      - GF_SECURITY_ADMIN_USER=sitespeedio
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana:/var/lib/grafana
    restart: unless-stopped
  grafana-setup:
    image: sitespeedio/grafana-bootstrap:17.5.0
    links:
      - grafana
    environment:
      - GF_PASSWORD=hdeAga76VG6ga7plZ1
      - GF_USER=sitespeedio
  graphite:
    container_name: graphite
    image: sitespeedio/graphite:1.1.7-9
    hostname: graphite
    ports:
      - "2003:2003"
      - "8080:80"
    restart: unless-stopped
    volumes:
      # In production you should configure/map these to your container
      # Make sure whisper and graphite.db/grafana.db lives outside your containerr
      # https://www.sitespeed.io/documentation/sitespeed.io/graphite/#graphite-for-production-important
      - whisper:/opt/graphite/storage/whisper
      # Download an empty graphite.db from https://github.com/sitespeedio/sitespeed.io/tree/master/docker/graphite
      # - /absolute/path/to/graphite/graphite.db:/opt/graphite/storage/graphite.db
      #
      # And put the configuration files on your server, configure them as you need
      # Download from https://github.com/sitespeedio/docker-graphite-statsd/tree/master/conf/graphite
      # - /absolute/path/to/graphite/conf/storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
      # - /absolute/path/to/graphite/conf/storage-aggregation.conf:/opt/graphite/conf/storage-aggregation.conf
      # - /absolute/path/to/graphite/conf/carbon.conf:/opt/graphite/conf/carbon.conf
  influxdb:
    container_name: influxdb
    image: influxdb:latest
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    restart: unless-stopped
  postgres:
    container_name: postgres
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
    ports:
      - "5432:5432"
  jenkins:
    container_name: jenkins
    # image: jenkins/jenkins:lts
    build: ./jenkins
    shm_size: '2gb'
    cap_add:
      # Run the container with SYS_ADMIN privileges so Chrome can sandbox processes. This is needed by LHCI.
      - SYS_ADMIN
    ports:
      - "8181:8080"
      - "50000:50000"
    environment:
      # JENKINS_URL_CONFIG variable is used to set jenkins_url variable in jenkins global configuration.
      # This url will be used to create links to jenkins builds in grafana dashboards, default is http://127.0.0.1:8181/
      # Slash '/' should be escaped with '\'
      # - JENKINS_URL_CONFIG=http:\/\/127.0.0.1:8181\/
      # JENKINS_GRAFANA_URL is used for generating link to grafana report in jenkins job description
      # default value is 127.0.0.1:8857
      # - JENKINS_GRAFANA_URL=127.0.0.1:8857
      - JENKINS_ADMIN_LOGIN=admin
      - JENKINS_ADMIN_PASSWORD=admin
      - SITESPEED_REPORT_PATH=$PWD/reports/sitespeed-result/
      - LHCI_REPORT_PATH=$PWD/reports/lhci-client/
      - K6_REPORT_PATH=$PWD/reports/k6/
      - K6_SCRIPTS_PATH=$PWD/k6/scripts/
    volumes:
      - ./wpt-server/scripts/:/var/lib/wpt-scripts/
      - ./reports/sitespeed-result/:/var/lib/sitespeed.io/sitespeed-result/
      - ./reports/lhci-client/:/var/lib/lhci/lhci-result/
      - ./reports/k6/:/var/lib/k6/k6-result/
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins-home:/var/jenkins_home
    restart: unless-stopped
  # portainer:
  #   container_name: portainer
  #   image: portainer/portainer
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   restart: unless-stopped
volumes:
    whisper:
    influxdb:
    postgres:
    grafana:
    jenkins-home:
